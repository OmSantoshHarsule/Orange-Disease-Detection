name: Orange Disease Detection CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run tests
      run: |
        # Add your test commands here
        # Example: pytest tests/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Build and push Docker images
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        tags: orange-disease-detection:${{ github.sha }}
        load: true
    
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Push to Docker Hub
      if: github.ref == 'refs/heads/main'
      run: |
        # Tag the image with latest and the commit hash
        docker tag orange-disease-detection:${{ github.sha }} ${{ secrets.DOCKER_HUB_USERNAME }}/orange-disease-detection:latest
        docker tag orange-disease-detection:${{ github.sha }} ${{ secrets.DOCKER_HUB_USERNAME }}/orange-disease-detection:${{ github.sha }}
        
        # Push both tags
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/orange-disease-detection:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/orange-disease-detection:${{ github.sha }}

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Copy docker-compose file to EC2
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "docker-compose.yml,.env"
        target: "~/app"
    
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd ~/app
          # Pull the latest image
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/orange-disease-detection:latest
          
          # Create/update .env file with necessary environment variables
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" > .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_DEFAULT_REGION=us-east-1" >> .env
          
          # Deploy using docker-compose
          docker-compose down --remove-orphans
          docker-compose up -d
          
          # Print container status
          docker-compose ps
